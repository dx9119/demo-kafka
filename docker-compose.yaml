version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOO_LOG_LEVEL: "DEBUG"
    volumes:
      - ./logs/zookeeper:/var/log/zookeeper
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # Kafka должен объявлять два адреса:
      # 1. Для внутренних клиентов Docker (Kafdrop)
      # 2. Для внешних клиентов (ваш браузер или приложение на хосте)
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092

      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092
      # Используем 0.0.0.0, чтобы слушать все сетевые интерфейсы

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_HEAP_OPTS: "-Xms256m -Xmx512m"
      KAFKA_NUM_NETWORK_THREADS: 2
      KAFKA_NUM_IO_THREADS: 2
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_JVM_PERFORMANCE_OPTS: ""
      KAFKA_LOG4J_ROOT_LOGLEVEL: "INFO"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - ./logs/kafka:/var/log/kafka
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.0
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka